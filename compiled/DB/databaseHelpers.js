'use strict';

var mongoose = require('mongoose');
mongoose.connect('mongodb://localhost/test');
var db = mongoose.connection;
db.on('error', console.error.bind(console, 'connection error:'));
db.once('open', function () {
  console.log('now connected');
});

var imageSchema = mongoose.Schema({
  url: String
});

var Image = mongoose.model('Image', imageSchema);

var saveUrlToDatabase = function saveUrlToDatabase(url, callback) {
  console.log('called save with ', url);

  var image = new Image({ url: url });
  //update if image url is unique
  Image.findOneAndUpdate({ url: url }, { url: url }, { upsert: true }, function (err, data) {
    if (err) {
      throw err;
    }
    //return all images stored
    Image.find(function (err, allImages) {
      if (err) return console.error(err);
      callback(null, allImages);
    });
  });
};
module.exports = saveUrlToDatabase;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL0RCL2RhdGFiYXNlSGVscGVycy5qcyJdLCJuYW1lcyI6WyJtb25nb29zZSIsInJlcXVpcmUiLCJjb25uZWN0IiwiZGIiLCJjb25uZWN0aW9uIiwib24iLCJjb25zb2xlIiwiZXJyb3IiLCJiaW5kIiwib25jZSIsImxvZyIsImltYWdlU2NoZW1hIiwiU2NoZW1hIiwidXJsIiwiU3RyaW5nIiwiSW1hZ2UiLCJtb2RlbCIsInNhdmVVcmxUb0RhdGFiYXNlIiwiY2FsbGJhY2siLCJpbWFnZSIsImZpbmRPbmVBbmRVcGRhdGUiLCJ1cHNlcnQiLCJlcnIiLCJkYXRhIiwiZmluZCIsImFsbEltYWdlcyIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBSUEsV0FBV0MsUUFBUSxVQUFSLENBQWY7QUFDQUQsU0FBU0UsT0FBVCxDQUFpQiwwQkFBakI7QUFDQSxJQUFJQyxLQUFLSCxTQUFTSSxVQUFsQjtBQUNBRCxHQUFHRSxFQUFILENBQU0sT0FBTixFQUFlQyxRQUFRQyxLQUFSLENBQWNDLElBQWQsQ0FBbUJGLE9BQW5CLEVBQTRCLG1CQUE1QixDQUFmO0FBQ0FILEdBQUdNLElBQUgsQ0FBUSxNQUFSLEVBQWdCLFlBQVc7QUFDekJILFVBQVFJLEdBQVIsQ0FBWSxlQUFaO0FBQ0QsQ0FGRDs7QUFJQSxJQUFJQyxjQUFjWCxTQUFTWSxNQUFULENBQWdCO0FBQzlCQyxPQUFLQztBQUR5QixDQUFoQixDQUFsQjs7QUFJQSxJQUFJQyxRQUFRZixTQUFTZ0IsS0FBVCxDQUFlLE9BQWYsRUFBd0JMLFdBQXhCLENBQVo7O0FBRUEsSUFBSU0sb0JBQW9CLFNBQXBCQSxpQkFBb0IsQ0FBU0osR0FBVCxFQUFjSyxRQUFkLEVBQXdCO0FBQzlDWixVQUFRSSxHQUFSLENBQVksbUJBQVosRUFBaUNHLEdBQWpDOztBQUVBLE1BQUlNLFFBQVEsSUFBSUosS0FBSixDQUFVLEVBQUVGLEtBQUtBLEdBQVAsRUFBVixDQUFaO0FBQ0E7QUFDQUUsUUFBTUssZ0JBQU4sQ0FDRSxFQUFDUCxLQUFLQSxHQUFOLEVBREYsRUFFRSxFQUFDQSxLQUFLQSxHQUFOLEVBRkYsRUFHRSxFQUFDUSxRQUFRLElBQVQsRUFIRixFQUlFLFVBQUNDLEdBQUQsRUFBTUMsSUFBTixFQUFlO0FBQ2IsUUFBSUQsR0FBSixFQUFTO0FBQ1AsWUFBTUEsR0FBTjtBQUNEO0FBQ0Q7QUFDQVAsVUFBTVMsSUFBTixDQUFXLFVBQVVGLEdBQVYsRUFBZUcsU0FBZixFQUEwQjtBQUNuQyxVQUFJSCxHQUFKLEVBQVMsT0FBT2hCLFFBQVFDLEtBQVIsQ0FBY2UsR0FBZCxDQUFQO0FBQ1RKLGVBQVMsSUFBVCxFQUFlTyxTQUFmO0FBQ0QsS0FIRDtBQUlILEdBYkQ7QUFjRCxDQW5CRDtBQW9CQUMsT0FBT0MsT0FBUCxHQUFpQlYsaUJBQWpCIiwiZmlsZSI6ImRhdGFiYXNlSGVscGVycy5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBtb25nb29zZSA9IHJlcXVpcmUoJ21vbmdvb3NlJyk7XG5tb25nb29zZS5jb25uZWN0KCdtb25nb2RiOi8vbG9jYWxob3N0L3Rlc3QnKTtcbnZhciBkYiA9IG1vbmdvb3NlLmNvbm5lY3Rpb247XG5kYi5vbignZXJyb3InLCBjb25zb2xlLmVycm9yLmJpbmQoY29uc29sZSwgJ2Nvbm5lY3Rpb24gZXJyb3I6JykpO1xuZGIub25jZSgnb3BlbicsIGZ1bmN0aW9uKCkge1xuICBjb25zb2xlLmxvZygnbm93IGNvbm5lY3RlZCcpO1xufSk7XG5cbnZhciBpbWFnZVNjaGVtYSA9IG1vbmdvb3NlLlNjaGVtYSh7XG4gICAgdXJsOiBTdHJpbmdcbn0pO1xuXG52YXIgSW1hZ2UgPSBtb25nb29zZS5tb2RlbCgnSW1hZ2UnLCBpbWFnZVNjaGVtYSk7XG5cbnZhciBzYXZlVXJsVG9EYXRhYmFzZSA9IGZ1bmN0aW9uKHVybCwgY2FsbGJhY2spIHtcbiAgY29uc29sZS5sb2coJ2NhbGxlZCBzYXZlIHdpdGggJywgdXJsKTtcblxuICB2YXIgaW1hZ2UgPSBuZXcgSW1hZ2UoeyB1cmw6IHVybCB9KTtcbiAgLy91cGRhdGUgaWYgaW1hZ2UgdXJsIGlzIHVuaXF1ZVxuICBJbWFnZS5maW5kT25lQW5kVXBkYXRlKFxuICAgIHt1cmw6IHVybH0sXG4gICAge3VybDogdXJsfSxcbiAgICB7dXBzZXJ0OiB0cnVlfSxcbiAgICAoZXJyLCBkYXRhKSA9PiB7XG4gICAgICBpZiAoZXJyKSB7XG4gICAgICAgIHRocm93IGVyclxuICAgICAgfVxuICAgICAgLy9yZXR1cm4gYWxsIGltYWdlcyBzdG9yZWRcbiAgICAgIEltYWdlLmZpbmQoZnVuY3Rpb24gKGVyciwgYWxsSW1hZ2VzKSB7XG4gICAgICAgIGlmIChlcnIpIHJldHVybiBjb25zb2xlLmVycm9yKGVycik7XG4gICAgICAgIGNhbGxiYWNrKG51bGwsIGFsbEltYWdlcylcbiAgICAgIH0pXG4gIH0pO1xufVxubW9kdWxlLmV4cG9ydHMgPSBzYXZlVXJsVG9EYXRhYmFzZTsiXX0=