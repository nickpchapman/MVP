{"version":3,"sources":["../../DB/databaseHelpers.js"],"names":["api","require","mongoose","connect","db","connection","on","console","error","bind","once","log","imageSchema","Schema","url","String","analysis","Image","model","module","exports","saveUrlToDatabase","callback","clarifaiImage","err","data","JSON","stringify","image","findOneAndUpdate","upsert","find","allImages","deleteUrlFromDatabase","findOneAndRemove","getAllUrls"],"mappings":";;AAAA,IAAMA,MAAMC,QAAQ,qBAAR,CAAZ;AACA,IAAIC,WAAWD,QAAQ,UAAR,CAAf;AACAC,SAASC,OAAT,CAAiB,0BAAjB;AACA,IAAIC,KAAKF,SAASG,UAAlB;AACAD,GAAGE,EAAH,CAAM,OAAN,EAAeC,QAAQC,KAAR,CAAcC,IAAd,CAAmBF,OAAnB,EAA4B,mBAA5B,CAAf;AACAH,GAAGM,IAAH,CAAQ,MAAR,EAAgB,YAAW;AACzBH,UAAQI,GAAR,CAAY,eAAZ;AACD,CAFD;;AAQA,IAAIC,cAAcV,SAASW,MAAT,CAAgB;AAC9BC,OAAKC,MADyB;AAE9BC,YAAUD;AAFoB,CAAhB,CAAlB;;AAKA,IAAIE,QAAQf,SAASgB,KAAT,CAAe,OAAf,EAAwBN,WAAxB,CAAZ;;AAEAO,OAAOC,OAAP,GAAiB;;AAEfC,qBAAmB,2BAASP,GAAT,EAAcQ,QAAd,EAAwB;;AAEzCtB,QAAIuB,aAAJ,CAAkBT,GAAlB,EAAuB,UAACU,GAAD,EAAMC,IAAN,EAAe;AACpC,UAAID,GAAJ,EAAQ;AACNjB,gBAAQI,GAAR,CAAYa,GAAZ;AACD;AACD,UAAIC,OAAOC,KAAKC,SAAL,CAAeF,IAAf,CAAX;;AAEA,UAAIG,QAAQ,IAAIX,KAAJ,CAAU,EAACH,KAAKA,GAAN,EAAWE,UAAUS,IAArB,EAAV,CAAZ;;AAEA;AACAR,YAAMY,gBAAN,CACE,EAAEf,KAAKA,GAAP,EAAYE,UAAUS,IAAtB,EADF,EAEE,EAAEX,KAAKA,GAAP,EAAYE,UAAUS,IAAtB,EAFF,EAGE,EAACK,QAAQ,IAAT,EAHF,EAIE,UAACN,GAAD,EAAMC,IAAN,EAAe;AACb,YAAID,GAAJ,EAAS;AACP,gBAAMA,GAAN;AACD;AACD;AACAP,cAAMc,IAAN,CAAW,UAAUP,GAAV,EAAeQ,SAAf,EAA0B;AACnC,cAAIR,GAAJ,EAAS,OAAOjB,QAAQC,KAAR,CAAcgB,GAAd,CAAP;AACTF,mBAAS,IAAT,EAAeU,SAAf;AACD,SAHD;AAIH,OAbD;AAcD,KAvBD;AAwBD,GA5Bc;;AA8BfC,yBAAuB,+BAASnB,GAAT,EAAcQ,QAAd,EAAwB;AAC7CL,UAAMiB,gBAAN,CACE,EAACpB,KAAKA,GAAN,EADF,EAEE,UAACU,GAAD,EAAMC,IAAN,EAAe;AACb,UAAID,GAAJ,EAAS;AACP,cAAMA,GAAN;AACD;AACD;AACAP,YAAMc,IAAN,CAAW,UAAUP,GAAV,EAAeQ,SAAf,EAA0B;AACnC,YAAIR,GAAJ,EAAS,OAAOjB,QAAQC,KAAR,CAAcgB,GAAd,CAAP;AACTF,iBAAS,IAAT,EAAeU,SAAf;AACD,OAHD;AAIH,KAXD;AAYD,GA3Cc;;AA6CfG,cAAY,oBAASb,QAAT,EAAmB;AAC7BL,UAAMc,IAAN,CAAW,UAAUP,GAAV,EAAeQ,SAAf,EAA0B;AACnC,UAAIR,GAAJ,EAAS,OAAOjB,QAAQC,KAAR,CAAcgB,GAAd,CAAP;AACPF,eAAS,IAAT,EAAeU,SAAf;AACD,KAHH;AAID;AAlDc,CAAjB","file":"databaseHelpers.js","sourcesContent":["const api = require('../API/apiHelper.js');\nvar mongoose = require('mongoose');\nmongoose.connect('mongodb://localhost/test');\nvar db = mongoose.connection;\ndb.on('error', console.error.bind(console, 'connection error:'));\ndb.once('open', function() {\n  console.log('now connected');\n});\n\n\n\n\n\nvar imageSchema = mongoose.Schema({\n    url: String,\n    analysis: String\n});\n\nvar Image = mongoose.model('Image', imageSchema);\n\nmodule.exports = {\n\n  saveUrlToDatabase: function(url, callback) {\n\n    api.clarifaiImage(url, (err, data) => {\n      if (err){\n        console.log(err)\n      }\n      var data = JSON.stringify(data);\n\n      var image = new Image({url: url, analysis: data});\n\n      //update if image url is unique\n      Image.findOneAndUpdate(\n        { url: url, analysis: data},\n        { url: url, analysis: data},\n        {upsert: true},\n        (err, data) => {\n          if (err) {\n            throw err\n          }\n          //return all images stored\n          Image.find(function (err, allImages) {\n            if (err) return console.error(err);\n            callback(null, allImages)\n          })\n      });\n    })\n  },\n\n  deleteUrlFromDatabase: function(url, callback) {\n    Image.findOneAndRemove(\n      {url: url},\n      (err, data) => {\n        if (err) {\n          throw err\n        }\n        //return all images stored\n        Image.find(function (err, allImages) {\n          if (err) return console.error(err);\n          callback(null, allImages)\n        });\n    });\n  },\n\n  getAllUrls: function(callback) {\n    Image.find(function (err, allImages) {\n      if (err) return console.error(err);\n        callback(null, allImages)\n      });\n  }\n}\n\n\n\n\n\n\n\n\n\n\n"]}